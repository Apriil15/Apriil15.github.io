"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[4946],{3905:function(e,n,t){t.d(n,{Zo:function(){return f},kt:function(){return s}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),l=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},f=function(e){var n=l(e.components);return r.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,f=c(e,["components","mdxType","originalType","parentName"]),m=l(t),s=a,g=m["".concat(u,".").concat(s)]||m[s]||p[s]||o;return t?r.createElement(g,i(i({ref:n},f),{},{components:t})):r.createElement(g,i({ref:n},f))}));function s(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var c={};for(var u in n)hasOwnProperty.call(n,u)&&(c[u]=n[u]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4885:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return f},default:function(){return m}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],c={},u="Gin",l={unversionedId:"golang/Gin 2296fd8a8a5c485ebc21d8b88b945b79",id:"golang/Gin 2296fd8a8a5c485ebc21d8b88b945b79",title:"Gin",description:"- \u7576\u8981\u7d81\u5b9a query param \u6642\uff0cstruct tag \u7528 form",source:"@site/docs/golang/Gin 2296fd8a8a5c485ebc21d8b88b945b79.md",sourceDirName:"golang",slug:"/golang/Gin 2296fd8a8a5c485ebc21d8b88b945b79",permalink:"/docs/golang/Gin 2296fd8a8a5c485ebc21d8b88b945b79",editUrl:"https://github.com/Apriil15/apriil15.github.io/tree/master/docs/golang/Gin 2296fd8a8a5c485ebc21d8b88b945b79.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"20210508 Swagger",permalink:"/docs/golang/20210508 Swagger a1232fe2925f433e9d68ffb053eebbb6"},next:{title:"new vs make",permalink:"/docs/golang/new vs make 6e652078954d46a1912015dfee26aae2"}},f=[],p={toc:f};function m(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"gin"},"Gin"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u7576\u8981\u7d81\u5b9a ",(0,o.kt)("inlineCode",{parentName:"li"},"query param")," \u6642\uff0cstruct tag \u7528 ",(0,o.kt)("inlineCode",{parentName:"li"},"form")),(0,o.kt)("li",{parentName:"ul"},"\u7576\u8981\u7d81\u5b9a ",(0,o.kt)("inlineCode",{parentName:"li"},"body")," \u6642\uff0cstruct tag \u7528 ",(0,o.kt)("inlineCode",{parentName:"li"},"json"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "fmt"\n    "net/http"\n\n    "github.com/gin-gonic/gin"\n)\n\nfunc main() {\n    route := gin.Default()\n    route.GET("/", test)\n    route.POST("/", test)\n    route.Run(":8000")\n}\n\ntype Student struct {\n    Name string `form:"name"`\n    Age  int    `form:"age"`\n}\n\nfunc test(c *gin.Context) {\n    var student Student\n\n    err := c.ShouldBind(&student)\n    if err != nil {\n        fmt.Println("error: " + err.Error())\n    }\n\n    fmt.Printf("name: %v\\n", student.Name)\n    fmt.Printf("age: %v\\n", student.Age)\n\n    c.JSON(200, gin.H{"msg": http.StatusOK})\n}\n')))}m.isMDXComponent=!0}}]);