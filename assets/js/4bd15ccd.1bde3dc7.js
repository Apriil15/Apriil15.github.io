"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6212],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(n),d=r,h=c["".concat(s,".").concat(d)]||c[d]||m[d]||a;return n?o.createElement(h,l(l({ref:t},u),{},{components:n})):o.createElement(h,l({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<a;p++)l[p]=n[p];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4556:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return p},assets:function(){return u},toc:function(){return m},default:function(){return d}});var o=n(7462),r=n(3366),a=(n(7294),n(3905)),l=["components"],i={slug:"event-loop",title:"Something you should know about Event Loop",authors:"apriil15",tags:["Node.js"]},s=void 0,p={permalink:"/blog/event-loop",editUrl:"https://github.com/Apriil15/apriil15.github.io/tree/master/blog/2022-07-11-Event-Loop.md",source:"@site/blog/2022-07-11-Event-Loop.md",title:"Something you should know about Event Loop",description:"Something you should know about Event Loop!",date:"2022-07-11T00:00:00.000Z",formattedDate:"July 11, 2022",tags:[{label:"Node.js",permalink:"/blog/tags/node-js"}],readingTime:1.925,truncated:!0,authors:[{name:"apriil15",title:"Back End Engineer",url:"https://github.com/apriil15",imageURL:"https://github.com/apriil15.png",key:"apriil15"}],frontMatter:{slug:"event-loop",title:"Something you should know about Event Loop",authors:"apriil15",tags:["Node.js"]},nextItem:{title:"Customize Windows Terminal",permalink:"/blog/customize-windows-terminal"}},u={authorsImageUrls:[void 0]},m=[{value:"Concept",id:"concept",children:[],level:2},{value:"Micro-Task",id:"micro-task",children:[],level:2},{value:"Libuv\u2019s Event Loop Phase",id:"libuvs-event-loop-phase",children:[],level:2},{value:"Examples",id:"examples",children:[],level:2},{value:"Libuv",id:"libuv",children:[{value:"Thread Pool",id:"thread-pool",children:[],level:3}],level:2},{value:"Reference",id:"reference",children:[],level:2}],c={toc:m};function d(e){var t=e.components,n=(0,r.Z)(e,l);return(0,a.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Something you should know about Event Loop!"),(0,a.kt)("h2",{id:"concept"},"Concept"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"all JavaScript, V8, and the event loop run in one thread, called the main thread"),(0,a.kt)("li",{parentName:"ul"},"Node.js has two types of threads: ",(0,a.kt)("inlineCode",{parentName:"li"},"one event loop")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"worker threads")),(0,a.kt)("li",{parentName:"ul"},"Libuv creates a pool with 4 threads (default) that is only used if no asynchronous API is available"),(0,a.kt)("li",{parentName:"ul"},"event loop is a set of phases with dedicated data structures for each phase")),(0,a.kt)("h2",{id:"micro-task"},"Micro-Task"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"nextTick, promise are not part of Libuv, and are represented as an event loop on their own"),(0,a.kt)("li",{parentName:"ul"},"micro-task (nextTick, promise) uses the concept of a job queue"),(0,a.kt)("li",{parentName:"ul"},"micro-tasks\u2019 callback will be executed immediately after the current phase of the event loop")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://i.imgur.com/yisxkzu.png",alt:"micro-task (order: nextTick \u2192 promise)"})),(0,a.kt)("h2",{id:"libuvs-event-loop-phase"},"Libuv\u2019s Event Loop Phase"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"data structure: timer (minHeap), immediate (queue)")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://i.imgur.com/pOKWTp9.png",alt:"Libuv\u2019s event loop phase"})),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("p",null,"In this case, setTimeout and setImmediate will be random order"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"console.log('start')\n\nsetTimeout(() => {\n  console.log('setTimeout')\n}, 0)\n\nsetImmediate(() => {\n  console.log('setImmediate')\n})\n\nconsole.log('end')\n\n// start\n// end\n// setImmediate (random order)\n// setTimeout (random order)\n")),(0,a.kt)("p",null,"In this case, because after the IO phase, the next phase is ",(0,a.kt)("inlineCode",{parentName:"p"},"setImmediate"),". So, setImmediate must before setTimeout"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { readFile } from 'fs'\n\nconsole.log('start')\n\nreadFile('src/test.txt', (err, data) => {\n  setTimeout(() => {\n    console.log('setTimeout')\n  }, 0)\n\n  setImmediate(() => {\n    console.log('setImmediate')\n  })\n\n  if (!err) {\n    console.log(data.toString())\n  }\n})\n\nconsole.log('end')\n\n// start\n// end\n// data\n// setImmediate\n// setTimeout\n")),(0,a.kt)("h2",{id:"libuv"},"Libuv"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Libuv will delegate the work to the ",(0,a.kt)("inlineCode",{parentName:"p"},"operating system kernel")," whenever possible"),(0,a.kt)("p",{parentName:"li"},"The only performance limitation is the network"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"TCP/UDP servers and clients (network request)"),(0,a.kt)("li",{parentName:"ul"},"Pipes"),(0,a.kt)("li",{parentName:"ul"},"dns.resolve - Child processes"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"use libuv\u2019s thread pool"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"fs module (async function)"),(0,a.kt)("li",{parentName:"ul"},"dns.lookup"),(0,a.kt)("li",{parentName:"ul"},"Pipes (edge cases)")))),(0,a.kt)("h3",{id:"thread-pool"},"Thread Pool"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"os concept: os has ",(0,a.kt)("inlineCode",{parentName:"li"},"scheduler")," whose job is to allow certain processes to run on this 4-core system")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://i.imgur.com/rlsAITS.png",alt:null})),(0,a.kt)("p",null,"Libuv\u2019s thread pools (default = 4)"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"tasks enqueue"),(0,a.kt)("li",{parentName:"ol"},"worker handles"),(0,a.kt)("li",{parentName:"ol"},"os scheduler handles"),(0,a.kt)("li",{parentName:"ol"},"core do something (parallel)")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://i.imgur.com/98MoYCc.png",alt:null}),"\n",(0,a.kt)("img",{parentName:"p",src:"https://i.imgur.com/axqFwXY.png",alt:null})),(0,a.kt)("h2",{id:"reference"},"Reference"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"I recommend reading this series of articles"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://medium.com/softup-technologies/node-js-internals-not-everything-happens-on-the-thread-pool-a14d0a286efb"},"Node.js Internals: Not everything happens on the thread pool")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=PNa9OMajw9w&list=WL&index=17&ab_channel=node.js"},"Morning Keynote- Everything You Need to Know About Node.js Event Loop - Bert Belder, IBM"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://nodejs.org/en/docs/guides/dont-block-the-event-loop/"},"Don't Block the Event Loop (or the Worker Pool) | Node.js")))))}d.isMDXComponent=!0}}]);